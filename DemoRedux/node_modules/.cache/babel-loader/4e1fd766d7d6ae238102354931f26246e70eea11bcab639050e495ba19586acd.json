{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    decrease(state, action) {\n      state.counter = state.counter - action.amount;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrease') {\n    return {\n      counter: state.counter - action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","amount","decrease","toggle","counterReducer","arguments","length","undefined","type","store"],"sources":["D:/web development/sharpener/REDUX/DemoRedux/src/store/index.js"],"sourcesContent":["import {createStore} from 'redux';\r\nimport {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {counter: 0, showCounter: true};\r\n\r\ncreateSlice({\r\n    name: \"counter\",\r\n    initialState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++\r\n        },\r\n        decrement(state){\r\n            state.counter--\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.amount\r\n        },\r\n        decrease(state, action) {\r\n            state.counter = state.counter - action.amount\r\n        },\r\n        toggle(state) {\r\n            state.showCounter = !state.showCounter\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst counterReducer = (state =initialState , action) => {\r\n    if (action.type ===  \"increment\") {\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    } \r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n\r\n        };\r\n    }\r\n    if (action.type === 'increase') {\r\n        return {\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.showCounter\r\n\r\n        }\r\n    }\r\n    if (action.type === 'decrease') {\r\n        return {\r\n            counter: state.counter - action.amount,\r\n            showCounter: state.showCounter\r\n\r\n        }\r\n    }\r\n\r\n    if (action.type === \"toggle\") {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: state.counter\r\n        }\r\n    }\r\n    \r\n        return state\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AACjC,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAEpDH,WAAW,CAAC;EACRI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDM,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACL,OAAO,EAAE;IACnB,CAAC;IACDO,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACL,OAAO,GAAGK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACC,MAAM;IACjD,CAAC;IACDC,QAAQA,CAACL,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACL,OAAO,GAAGK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACC,MAAM;IACjD,CAAC;IACDE,MAAMA,CAACN,KAAK,EAAE;MACVA,KAAK,CAACJ,WAAW,GAAG,CAACI,KAAK,CAACJ,WAAW;IAC1C;EAEJ;AACJ,CAAC,CAAC;AAEF,MAAMW,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCP,KAAK,GAAAQ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAEd,YAAY;EAAA,IAAGS,MAAM,GAAAK,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,IAAIP,MAAM,CAACQ,IAAI,KAAM,WAAW,EAAE;IAC9B,OAAO;MACHhB,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EACA,IAAIO,MAAM,CAACQ,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHhB,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IAEvB,CAAC;EACL;EACA,IAAIO,MAAM,CAACQ,IAAI,KAAK,UAAU,EAAE;IAC5B,OAAO;MACHhB,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACC,MAAM;MACtCR,WAAW,EAAEI,KAAK,CAACJ;IAEvB,CAAC;EACL;EACA,IAAIO,MAAM,CAACQ,IAAI,KAAK,UAAU,EAAE;IAC5B,OAAO;MACHhB,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACC,MAAM;MACtCR,WAAW,EAAEI,KAAK,CAACJ;IAEvB,CAAC;EACL;EAEA,IAAIO,MAAM,CAACQ,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAO;MACHf,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAW;MAC/BD,OAAO,EAAEK,KAAK,CAACL;IACnB,CAAC;EACL;EAEI,OAAOK,KAAK;AACpB,CAAC;AAED,MAAMY,KAAK,GAAGpB,WAAW,CAACe,cAAc,CAAC;AAEzC,eAAeK,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}