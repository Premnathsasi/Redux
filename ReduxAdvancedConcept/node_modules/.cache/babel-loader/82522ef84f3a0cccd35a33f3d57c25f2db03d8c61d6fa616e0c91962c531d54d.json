{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\sharpener\\\\REDUX\\\\ReduxAdvancedConcept\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, Fragment } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uiActions } from \"./store/UiSlice\";\nimport Notification from \"./components/UI/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const isCartVisible = useSelector(state => state.ui.isCartVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: \"pending\",\n        title: \"sending...\",\n        message: \"sending cart data\"\n      }));\n      const res = await fetch(\"https://http-request-30a26-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!res.ok) {\n        dispatch(uiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"sent cart data failed\"\n        }));\n      }\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"sent cart data successfully\"\n      }));\n    };\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    sendCartData().catch(err => {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"sent cart data failed\"\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [isCartVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qm7BqNJZ3TJE1wNpfCVRPaaqm2M=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Fragment","Cart","Layout","Products","useSelector","useDispatch","uiActions","Notification","jsxDEV","_jsxDEV","isInitial","App","_s","dispatch","isCartVisible","state","ui","cart","notification","sendCartData","showNotification","status","title","message","res","fetch","method","body","JSON","stringify","ok","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/web development/sharpener/REDUX/ReduxAdvancedConcept/src/App.js"],"sourcesContent":["import { useEffect, Fragment } from \"react\";\r\nimport Cart from \"./components/Cart/Cart\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport Products from \"./components/Shop/Products\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { uiActions } from \"./store/UiSlice\";\r\nimport Notification from \"./components/UI/Notification\";\r\n\r\nlet isInitial = true;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isCartVisible = useSelector((state) => state.ui.isCartVisible);\r\n  const cart = useSelector((state) => state.cart);\r\n  const notification = useSelector((state) => state.ui.notification);\r\n\r\n  useEffect(() => {\r\n    const sendCartData = async () => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"pending\",\r\n          title: \"sending...\",\r\n          message: \"sending cart data\",\r\n        })\r\n      );\r\n      const res = await fetch(\r\n        \"https://http-request-30a26-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(cart),\r\n        }\r\n      );\r\n      if (!res.ok) {\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: \"error\",\r\n            title: \"Error\",\r\n            message: \"sent cart data failed\",\r\n          })\r\n        );\r\n      }\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success\",\r\n          message: \"sent cart data successfully\",\r\n        })\r\n      );\r\n    };\r\n    if (isInitial) {\r\n      isInitial = false;\r\n      return;\r\n    }\r\n    \r\n    sendCartData().catch((err) => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error\",\r\n          message: \"sent cart data failed\",\r\n        })\r\n      );\r\n    });\r\n  }, [cart, dispatch]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {notification && <Notification status={notification.status} title={notification.title} message={notification.message} />}\r\n      <Layout>\r\n        {isCartVisible && <Cart />}\r\n        <Products />\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}